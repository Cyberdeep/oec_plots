#!/usr/bin/python
import xml.etree.ElementTree as ET
import subprocess, glob, os,math

# Open pipe gnuplot. You may want to change the terminal from svg to pdf for publication quality plots.
gnuplot = subprocess.Popen(['gnuplot',"-persist"], stdin=subprocess.PIPE, stdout=subprocess.PIPE)
gnuplot.stdin.write("""
set terminal svg 
set output "plot_architecture.svg" 
set xlabel "Semi-major axis [AU]"
set yrange [-1:45]
set xrange [0.003:10]
unset ytics
set title "Architecture of multiplanetary systems"
set logscale x
set label "Data taken from the Open Exoplanet Catalogue." at screen 0.55,0.15 font ",8"
plot \
"-" with labels right offset -1,0 font ",6" notit, \
"-" with point pt 7 ps variable notitle 
""")

data = []

for filename in glob.glob("open_exoplanet_catalogue/systems/*.xml"):
	system = ET.parse(open(filename, 'r'))
	planets = system.findall(".//planet")
	if len(planets)>1:
		datasystem = []	
		for planet in planets:
			try:
				mass = float(planet.findtext("./mass"))
				name = system.findtext("./name")
				semimajoraxis = float(planet.findtext("./semimajoraxis"))
				datasystem.append([semimajoraxis,mass,name])
			except:
				# Most likely cause for an exception: Mass or semi-major axis not specified for this planet.
				# One could do a more complicated check here and see if the period and the mass of the host star is given and then calculate the semi-major axis 
				pass
		if len(datasystem)>0:
			datasystem.sort()
			data.append(datasystem)

def compare(x, y):
	if x>y: return 1
	if x<y: return -1
	return 0
	
# only plot first 30 systems				
sorteddata = sorted(data, cmp=compare)[0:45]

# Labels
y=0
for system in sorteddata:
	gnuplot.stdin.write("%e\t%e\t\"%s\"\n"%(system[0][0],y,system[0][2]))
	y += 1

gnuplot.stdin.write("\ne\n")

#Systems
y=0
for system in sorteddata:
	for planet in system:
		pointsize = (math.log(planet[1])+7.)/8.
		gnuplot.stdin.write("%e\t%e\t%e\n"%(planet[0], y, pointsize))
	y += 1
	

gnuplot.stdin.write("\ne\n")
gnuplot.stdin.close()
